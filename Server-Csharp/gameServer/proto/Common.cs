// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from common.proto</summary>
public static partial class CommonReflection {

  #region Descriptor
  /// <summary>File descriptor for common.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static CommonReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cgxjb21tb24ucHJvdG8iYgoMV2F0Y2hTZXR0aW5nEhAKCG1heFdhdGNoGAEg",
          "ASgNEhcKD3dhdGNoUGVyc2lzdGVudBgCIAEoCBIUCgx3YXRjaERlbGF5TXMY",
          "AyABKA0SEQoJY2FjaGVUaW1lGAQgASgNYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::WatchSetting), global::WatchSetting.Parser, new[]{ "MaxWatch", "WatchPersistent", "WatchDelayMs", "CacheTime" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
/// <summary>
/// 观战配置
/// </summary>
public sealed partial class WatchSetting : pb::IMessage<WatchSetting> {
  private static readonly pb::MessageParser<WatchSetting> _parser = new pb::MessageParser<WatchSetting>(() => new WatchSetting());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<WatchSetting> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CommonReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WatchSetting() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WatchSetting(WatchSetting other) : this() {
    maxWatch_ = other.maxWatch_;
    watchPersistent_ = other.watchPersistent_;
    watchDelayMs_ = other.watchDelayMs_;
    cacheTime_ = other.cacheTime_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WatchSetting Clone() {
    return new WatchSetting(this);
  }

  /// <summary>Field number for the "maxWatch" field.</summary>
  public const int MaxWatchFieldNumber = 1;
  private uint maxWatch_;
  /// <summary>
  /// 最大观战人数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint MaxWatch {
    get { return maxWatch_; }
    set {
      maxWatch_ = value;
    }
  }

  /// <summary>Field number for the "watchPersistent" field.</summary>
  public const int WatchPersistentFieldNumber = 2;
  private bool watchPersistent_;
  /// <summary>
  /// 观战是否持久化
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool WatchPersistent {
    get { return watchPersistent_; }
    set {
      watchPersistent_ = value;
    }
  }

  /// <summary>Field number for the "watchDelayMs" field.</summary>
  public const int WatchDelayMsFieldNumber = 3;
  private uint watchDelayMs_;
  /// <summary>
  /// 观战延迟时间，单位为毫秒
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint WatchDelayMs {
    get { return watchDelayMs_; }
    set {
      watchDelayMs_ = value;
    }
  }

  /// <summary>Field number for the "cacheTime" field.</summary>
  public const int CacheTimeFieldNumber = 4;
  private uint cacheTime_;
  /// <summary>
  /// 缓存时间
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CacheTime {
    get { return cacheTime_; }
    set {
      cacheTime_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as WatchSetting);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(WatchSetting other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MaxWatch != other.MaxWatch) return false;
    if (WatchPersistent != other.WatchPersistent) return false;
    if (WatchDelayMs != other.WatchDelayMs) return false;
    if (CacheTime != other.CacheTime) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (MaxWatch != 0) hash ^= MaxWatch.GetHashCode();
    if (WatchPersistent != false) hash ^= WatchPersistent.GetHashCode();
    if (WatchDelayMs != 0) hash ^= WatchDelayMs.GetHashCode();
    if (CacheTime != 0) hash ^= CacheTime.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (MaxWatch != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(MaxWatch);
    }
    if (WatchPersistent != false) {
      output.WriteRawTag(16);
      output.WriteBool(WatchPersistent);
    }
    if (WatchDelayMs != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(WatchDelayMs);
    }
    if (CacheTime != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(CacheTime);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (MaxWatch != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxWatch);
    }
    if (WatchPersistent != false) {
      size += 1 + 1;
    }
    if (WatchDelayMs != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WatchDelayMs);
    }
    if (CacheTime != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CacheTime);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(WatchSetting other) {
    if (other == null) {
      return;
    }
    if (other.MaxWatch != 0) {
      MaxWatch = other.MaxWatch;
    }
    if (other.WatchPersistent != false) {
      WatchPersistent = other.WatchPersistent;
    }
    if (other.WatchDelayMs != 0) {
      WatchDelayMs = other.WatchDelayMs;
    }
    if (other.CacheTime != 0) {
      CacheTime = other.CacheTime;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          MaxWatch = input.ReadUInt32();
          break;
        }
        case 16: {
          WatchPersistent = input.ReadBool();
          break;
        }
        case 24: {
          WatchDelayMs = input.ReadUInt32();
          break;
        }
        case 32: {
          CacheTime = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
